a:23:{s:7:"attribs";a:6:{s:15:"packagerversion";s:5:"1.6.1";s:7:"version";s:3:"2.0";s:5:"xmlns";s:35:"http://pear.php.net/dtd/package-2.0";s:11:"xmlns:tasks";s:33:"http://pear.php.net/dtd/tasks-1.0";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:18:"xsi:schemaLocation";s:147:"http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd";}s:4:"name";s:36:"sfPropelActAsNestedSetBehaviorPlugin";s:7:"channel";s:24:"pear.symfony-project.com";s:7:"summary";s:26:"Propel nested set behavior";s:11:"description";s:117:"The sfPropelActAsNestedSetBehaviorPlugin is a symfony plugin that provides nested set capabilities to Propel objects.";s:4:"lead";a:4:{s:4:"name";s:17:"Tristan Rivoallan";s:4:"user";s:10:"trivoallan";s:5:"email";s:21:"tristan@rivoallan.net";s:6:"active";s:3:"yes";}s:9:"developer";a:4:{s:4:"name";s:13:"Gordon Franke";s:4:"user";s:10:"trivoallan";s:5:"email";s:15:"gimler@arcor.de";s:6:"active";s:3:"yes";}s:4:"date";s:10:"2007-07-23";s:4:"time";s:8:"17:07:27";s:7:"version";a:2:{s:7:"release";s:5:"0.9.1";s:3:"api";s:5:"0.9.1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:37:"http://www.gnu.org/licenses/lgpl.html";}s:8:"_content";s:4:"LGPL";}s:5:"notes";s:1:"-";s:8:"contents";a:1:{s:3:"dir";a:2:{s:7:"attribs";a:1:{s:4:"name";s:1:"/";}s:4:"file";a:4:{i:0;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"4f1e417f9750e3045d74de181cf6593f";s:4:"name";s:17:"config/config.php";s:4:"role";s:4:"data";}}i:1;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"04f523ba9b780bb6a4b478b9539907b0";s:4:"name";s:44:"lib/sfPropelActAsNestedSetBehavior.class.php";s:4:"role";s:4:"data";}}i:2;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"9ba2782426afd8e79d2195c8b0ded484";s:4:"name";s:6:"README";s:4:"role";s:4:"data";}}i:3;a:1:{s:7:"attribs";a:3:{s:6:"md5sum";s:32:"7266a93b753b03bc5f00522e65722b79";s:4:"name";s:7:"LICENSE";s:4:"role";s:4:"data";}}}}}s:12:"dependencies";a:1:{s:8:"required";a:3:{s:3:"php";a:1:{s:3:"min";s:5:"5.1.0";}s:13:"pearinstaller";a:1:{s:3:"min";s:5:"1.4.1";}s:7:"package";a:3:{s:4:"name";s:7:"symfony";s:7:"channel";s:24:"pear.symfony-project.com";s:3:"min";s:5:"1.0.0";}}}s:10:"phprelease";s:0:"";s:9:"changelog";a:1:{s:7:"release";a:11:{i:0;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.9.1";s:3:"api";s:5:"0.9.1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-07-23";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:37:"http://www.gnu.org/licenses/lgpl.html";}s:8:"_content";s:4:"LGPL";}s:5:"notes";s:771:"==== Bugfixes ====

 * fixed `getLevel()` cache (gordon franke)
 * fixed scope handling : scope can be any type of data (Jorn.Wagner)
 * `retrieveFirstChild()` and `retrieveLastChild()` missing references to scope node (Olivier.Mansour)
 * fixed postgresql compatibility (Maciej.Filipiak and Krasimir.Angelov)
 * added a note about supported RDBMS (tristan)
 * made roadmap clearer (tristan)
 * removed useless Propel::getConnection (Eric.Fredj)
 * fixed scope handling in `deleteDescendants()` (Piers.Warmers)
 * fixed new `getDescendants()` implementation node level caching (tristan)

==== Enhancements ====

 * added new `isDescendantOf()` method (Piers.Warmers)
 * implemented faster getPath() method (francois)
 * implemented faster `getDescendants()` (Jon.Collins)";}i:1;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.9.0";s:3:"api";s:5:"0.9.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-05-24";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:37:"http://www.gnu.org/licenses/lgpl.html";}s:8:"_content";s:4:"LGPL";}s:5:"notes";s:242:"* Licence change : MIT -> LGPL
* Please welcome a new maintainer : Gordan Franke :)
* tree "dumper" utility method :  `sfPropelActAsNestedSetBehaviorUtils::dumpTree()`
* add optional select method for getPath|getParent|retrieveParent (gordon)";}i:2;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.8.2";s:3:"api";s:5:"0.8.2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-04-18";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:226:"* added `getParent()` method (olivier mansour)
* added `getLevel()` unit tests
* implemented caching of level in collection retrieval methods : `getDescendants()`, `getChildren()`, `retrieveSiblings()`
* defined plugin roadmap";}i:3;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.8.1";s:3:"api";s:5:"0.8.1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-03-22";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:316:"* fixed #1480 : non-abstracted column name (paul markovitch)
* fixed bug in `getStubFromPeer()`
* `makeRoot()` should accept non new objects (peter van garderen)
* `getDescendants()` should not try to get descendants if node is a leaf (peter van garderen)
* updated unit tests
* enabled syntax highlighting in README";}i:4;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.8.0";s:3:"api";s:5:"0.8.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-19";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:117:"Implemented more methods (+ unit tests) :
 
 * `insertAsParentOf`
 * `retrieveSiblings`
 * `isEqualTo`
 * `isChildOf`";}i:5;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.7.0";s:3:"api";s:5:"0.7.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-19";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:139:"Implemented missing methods (+ unit tests) :
 
 * `moveToPrevSiblingOf`
 * `moveToNextSiblingOf`
 * `deleteChildren`
 * `deleteDescendants`";}i:6;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.6.2";s:3:"api";s:5:"0.6.2";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-19";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:68:"Fixed a bug due to wrong usage of `rtrim`. (Thanks to Kre≈°o Kunjas)";}i:7;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.6.1";s:3:"api";s:5:"0.6.1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-15";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:28:"Fixed minor bug in getPath()";}i:8;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.6.0";s:3:"api";s:5:"0.6.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-15";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:160:"Implemented missing node retrieval methods : 

 * retrieveFirstChild
 * retrieveLastChild
 * retrieveParent
 * getPath
 
Updated docs and unit tests accordingly";}i:9;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.5.1";s:3:"api";s:5:"0.5.1";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-14";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:44:"Pear package missed plugin's config.php file";}i:10;a:5:{s:7:"version";a:2:{s:7:"release";s:5:"0.5.0";s:3:"api";s:5:"0.5.0";}s:9:"stability";a:2:{s:7:"release";s:4:"beta";s:3:"api";s:4:"beta";}s:4:"date";s:10:"2007-02-14";s:7:"license";a:2:{s:7:"attribs";a:1:{s:3:"uri";s:38:"http://www.symfony-project.com/license";}s:8:"_content";s:11:"MIT license";}s:5:"notes";s:256:"Initial public release. The behavior is stable and fully unit-tested, but the API is not yet complete. Missing methods :

 * retrieveFirstChild
 * retrieveLastChild   
 * moveToPrevSiblingOf
 * moveToNextSiblingOf
 * deleteChildren
 * deleteTree
 * getPath";}}}s:8:"filelist";a:4:{s:17:"config/config.php";a:4:{s:6:"md5sum";s:32:"4f1e417f9750e3045d74de181cf6593f";s:4:"name";s:17:"config/config.php";s:4:"role";s:4:"data";s:12:"installed_as";s:84:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/config/config.php";}s:44:"lib/sfPropelActAsNestedSetBehavior.class.php";a:4:{s:6:"md5sum";s:32:"04f523ba9b780bb6a4b478b9539907b0";s:4:"name";s:44:"lib/sfPropelActAsNestedSetBehavior.class.php";s:4:"role";s:4:"data";s:12:"installed_as";s:111:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/lib/sfPropelActAsNestedSetBehavior.class.php";}s:6:"README";a:4:{s:6:"md5sum";s:32:"9ba2782426afd8e79d2195c8b0ded484";s:4:"name";s:6:"README";s:4:"role";s:4:"data";s:12:"installed_as";s:73:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/README";}s:7:"LICENSE";a:4:{s:6:"md5sum";s:32:"7266a93b753b03bc5f00522e65722b79";s:4:"name";s:7:"LICENSE";s:4:"role";s:4:"data";s:12:"installed_as";s:74:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/LICENSE";}}s:12:"_lastversion";N;s:7:"dirtree";a:3:{s:73:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/config";b:1;s:66:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin";b:1;s:70:"/home/piccioli/sf/ice/plugins/sfPropelActAsNestedSetBehaviorPlugin/lib";b:1;}s:3:"old";a:7:{s:7:"version";s:5:"0.9.1";s:12:"release_date";s:10:"2007-07-23";s:13:"release_state";s:4:"beta";s:15:"release_license";s:4:"LGPL";s:13:"release_notes";s:1:"-";s:12:"release_deps";a:3:{i:0;a:4:{s:4:"type";s:3:"php";s:3:"rel";s:2:"ge";s:7:"version";s:5:"5.1.0";s:8:"optional";s:2:"no";}i:1;a:6:{s:4:"type";s:3:"pkg";s:7:"channel";s:12:"pear.php.net";s:4:"name";s:4:"PEAR";s:3:"rel";s:2:"ge";s:7:"version";s:5:"1.4.1";s:8:"optional";s:2:"no";}i:2;a:6:{s:4:"type";s:3:"pkg";s:7:"channel";s:24:"pear.symfony-project.com";s:4:"name";s:7:"symfony";s:3:"rel";s:2:"ge";s:7:"version";s:5:"1.0.0";s:8:"optional";s:2:"no";}}s:11:"maintainers";a:2:{i:0;a:5:{s:4:"name";s:17:"Tristan Rivoallan";s:5:"email";s:21:"tristan@rivoallan.net";s:6:"active";s:3:"yes";s:6:"handle";s:10:"trivoallan";s:4:"role";s:4:"lead";}i:1;a:5:{s:4:"name";s:13:"Gordon Franke";s:5:"email";s:15:"gimler@arcor.de";s:6:"active";s:3:"yes";s:6:"handle";s:10:"trivoallan";s:4:"role";s:9:"developer";}}}s:10:"xsdversion";s:3:"2.0";s:13:"_lastmodified";i:1223052844;}